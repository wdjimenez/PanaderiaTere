/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pos.view;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import pos.model.Producto;
import pos.model.Ventas;
import pos.util.Config;
import pos.util.DataBase;

/**
 *
 * @author wdjimenez
 */
public class RepMovimientosView extends javax.swing.JFrame {

    private Font default_font = new Font("Tahoma", Font.BOLD, 18);
    
    /**
     * Creates new form RepMovimientosView
     */
    public RepMovimientosView() {
        initComponents();
        
        getContentPane().setBackground(Color.decode(Config.ColorContent));
        
        bBuscar.setBackground(Color.decode(Config.ColorElement));
        bBuscar.setForeground(Color.decode(Config.ColorText));
        
        
        Date d = new Date();
        
        dateFrom.setDate(d);
        dateTo.setDate(d);
        
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateFrom = new com.toedter.calendar.JDateChooser();
        dateTo = new com.toedter.calendar.JDateChooser();
        bBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableReporte = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        dateFrom.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        dateTo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        bBuscar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bBuscar.setText("Buscar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        tableReporte.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tableReporte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Fecha", "Hora", "Cantidad", "Usuario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableReporte);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bBuscar)
                .addContainerGap(136, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bBuscar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        buscaMovimientos();
    }//GEN-LAST:event_bBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RepMovimientosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RepMovimientosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RepMovimientosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RepMovimientosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RepMovimientosView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBuscar;
    private com.toedter.calendar.JDateChooser dateFrom;
    private com.toedter.calendar.JDateChooser dateTo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableReporte;
    // End of variables declaration//GEN-END:variables


    private void buscaMovimientos() {
        //Date from = (Date)textFechaFrom.getValue();
        //Date to = (Date)textFechaTo.getValue();
        
        Date from = dateFrom.getDate();
        Date to = dateTo.getDate();
        
        JLabel label = new JLabel();
                        
        SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
        
        label.setFont(default_font);
        
        //Verificamos que el rango sea correcto from <= to
        if(from.after(to)){
            label.setText("La fecha final es menor que la fecha inicial, invierta las fechas");
            JOptionPane.showMessageDialog(this, label);
            return;
        }
        
        DefaultTableModel modelo = (DefaultTableModel) tableReporte.getModel();                       
        
        modelo.setRowCount(0);
        
        recuperaMovimientos(sf.format(from), sf.format(to), modelo);
        
        ajustaAnchoFilas(tableReporte);
       
    }

    private void ajustaAnchoFilas(JTable tablegen) {
        try {
            for (int row=0; row<tablegen.getRowCount(); row++) {
                int rowHeight = tablegen.getRowHeight();

                for (int column=0; column<tablegen.getColumnCount(); column++) {
                    Component comp = tablegen.prepareRenderer(tablegen.getCellRenderer(row, column), row, column);
                    rowHeight = Math.max(rowHeight, comp.getPreferredSize().height);
                }

                tablegen.setRowHeight(row, rowHeight);
            }
        } catch(ClassCastException e) { }
    }

    private void recuperaMovimientos(String from, String to, DefaultTableModel modelo) {
        Connection conn;
        
        String consulta = "SELECT date(prod_stock.fecha,'localtime') as fecha, time(prod_stock.fecha, 'localtime') as hora, " +
"	   productos.nombre as producto, prod_stock.cantidad, prod_stock.user" +
"	   FROM prod_stock INNER JOIN productos " +
"                           ON productos.id  = prod_stock.idProd " +
"	   WHERE date(prod_stock.fecha,'localtime') BETWEEN \"" + from + "\" AND \"" + to + "\" " +
"	ORDER BY date(prod_stock.fecha,'localtime'), time(prod_stock.fecha, 'localtime')";        
        
        conn = DataBase.getConnection();
        
        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(consulta);
            while (rs.next()) {
                modelo.addRow(new Object[]{
                    rs.getString("producto"),
                    rs.getString("fecha"),
                    rs.getString("hora"),
                    rs.getInt("cantidad"),
                    rs.getString("user")
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
